Callback 

Es una función que se ejecutará después de que otra función haya terminado de ejecutarse


function doHomework(subject, callback) {
  alert(`Starting my ${subject} homework.`);
  callback();
}
function alertFinished(){
  alert('Finished my homework');
}


doHomework('math', alertFinished);


Funcion anonima
 Es una funcion que no tiene nombre y se autoejecuta no es necesario atuo ejecutarle 
 va ordenado entre parentesisi y al final de la llaves sev vuelve a colocar parentesis para decirel a javascript que se ejecuta la funcion en esos parenteisis 
 tambien se le puede pasar parametros como el ejemplo
 
(function (uno, dos, tres) {
  console.log(uno);
  console.log(dos);
  console.log(tres);
}(1, 2, 3));


Funcionas flecha 

Es una forma de reduicir al sintaxis del código 

Ejemplo 1
var sumaEs5 = function(x, y) {
    return x + y;
};
const sumaEs6 = (x, y) => { return x + y };

ejemplo 2
ejemplo con un parametro 
var cuadradoEs5 = function(x) {
    return x * x;
};

const cuadradoEs6 = (x) => { return x * x };
se puede escribir sin llaves 
 const cuadradoEs6 = x => { return x * x };

ejemplo 3 funcion sin parametro 

var holaEs5 = function() {
    alert('Hola');
};

const holaEs6 = () => { alert('Hola'); };


ejemplo 3 
retornando un valor literal 

var agregarIdEs5 = function(id, nombre) {
    return {
        id: id,
        nombre: nombre
    }
};

const agregarIdEs6 = (id, nombre) => ({ id: id, nombre: nombre });

Ejemplo 4

invocando un array 

const automoviles = [
    { name:'Renault Megane', precio:16000 },
    { name:'Toyota Corolla', precio:17000 },
    { name:'Honda Civic', precio:18000 }
];


var precios = automoviles.map(function(automovil) {
    return automoviles.precio;
});

console.log(precios); // [16000, 17000, 18000]

const precios = automoviles.map(automovil => automovil.precio);



//////////////////////////////////////////////////Ejemplos///////////////////////////////////////////////////


<!DOCTYPE html>
<html>
<body>

<p id="demo">Ejemplo para Generar tabla</p>

<input type="button" value="Genera una tabla" onclick="genera_tabla()">

<script>
function genera_tabla() {
  // Obtener la referencia del elemento body
  var body = document.getElementsByTagName("body")[0];

  // Crea un elemento <table> y un elemento <tbody>
  var tabla   = document.createElement("table");
  var tblBody = document.createElement("tbody");

  // Crea las celdas
  for (var i = 0; i < 4; i++) {
    // Crea las hileras de la tabla
    var hilera = document.createElement("tr");

    for (var j = 0; j < 5; j++) {
      // Crea un elemento <td> y un nodo de texto, haz que el nodo de
      // texto sea el contenido de <td>, ubica el elemento <td> al final
      // de la hilera de la tabla
      var celda = document.createElement("td");
      var textoCelda = document.createTextNode("celda en la hilera "+i+", columna "+j);
      celda.appendChild(textoCelda);
      hilera.appendChild(celda);
    }

    // agrega la hilera al final de la tabla (al final del elemento tblbody)
    tblBody.appendChild(hilera);
  }

  // posiciona el <tbody> debajo del elemento <table>
  tabla.appendChild(tblBody);
  // appends <table> into <body>
  body.appendChild(tabla);
  // modifica el atributo "border" de la tabla y lo fija a "2";
  tabla.setAttribute("border", "2");
}
</script>

</body>
</html>

/-----------------------------------------------------------------------------------------------/


<!DOCTYPE html>
<html>
<body>


<button onclick="myFunction()">Click Me!</button>

<script>
function myFunction() {
 var products = [ ['Negro', 'Azul'],
                 ['H', 'M'], 
                 ['S', 'M','L']   
               ];

function build(arr, prefix) {
  var s= '';
  arr[0].forEach(function(val) {
    var sl= arr.slice(1),
        out= prefix + '<td>' + val;
    
    if(sl.length) {
      s+= build(sl, out);
    }
    else {
      s+= out;
    }
  });
  return s;
} //build

document.body.innerHTML= '<table>' + build(products, '<tr>') + '</table>';
}
</script>

</body>
</html>






